from pyb import Pin, ADC
from machine import I2C
from SH1107 import OLED
from utime import sleep_ms, sleep_us
import framebuf


background = framebuf.FrameBuffer(bytearray(
    b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    b'\x80\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x7f\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    b'\xa0\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd0\xff\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    b'\xe8\xff\xfb\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x07\xe8\xff\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08'
    b'\xe8\xff\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\xe8\xff\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10'
    b'\xe8\xff\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\xe8\xff\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10'
    b'\xe8\xff\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\xe8\xff\xfb\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x07'
    b'\xd0\xff\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    b'\x40\x7f\x11\x42\x08\x21\x84\x10\x42\x08\x21\x84\x10\x42\x08\x01\x80\x80\x10\x42\x08\x21\x84\x10\x42\x08\x21\x84\x10\x42\x08\x01'
    b'\x00\x7f\x10\x42\x08\x21\x84\x10\x42\x08\x21\x84\x10\x42\x08\x01\x00\x00\x10\x40\x00\x01\x04\x10\x40\x00\x01\x04\x10\x40\x00\x01'
    b'\x00\x00\x10\x40\x00\x01\x04\x10\x40\x00\x01\x04\x10\x40\x00\x01\x00\x00\x10\x40\x00\x01\x04\x10\x40\x00\x01\x04\x10\x40\x00\x01'
    b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    b'\x00\x00\x38\x00\xe0\x0e\x00\xea\x00\xe0\x0e\x00\xee\x00\x98\x3b\x00\x00\x28\x00\x80\x0a\x00\xaa\x00\x20\x0a\x00\xaa\x00\x90\x2a'
    b'\x00\x00\x28\x00\xe0\x0a\x00\xae\x00\xe0\x0a\x00\xae\x00\x90\x2a\x00\x00\x28\x00\x20\x0a\x00\xa8\x00\xa0\x0a\x00\xaa\x00\x90\x2a'
    b'\x00\x00\x38\x00\xe0\x0e\x00\xe8\x00\xe0\x0e\x00\xee\x00\xb8\x3b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'),
    128, 30, framebuf.MONO_HMSB)


TWI = I2C(scl = 'PB9', sda = 'PB8', freq = 400000)

oled = OLED(TWI)

adc = ADC(Pin('A0'))


def map_value(v, x_min, x_max, y_min, y_max):
    return (y_min + (((y_max - y_min) / (x_max - x_min)) * (v - x_min)))


def get_adc_avg():
    samples = 64
    temp = 0
    
    while(samples > 0):
        temp += adc.read()
        sleep_us(100)
        samples -= 1
    
    temp >>= 6
    
    return temp


oled.fill(oled.BLACK)
oled.show()


while(True):
    adc_value = get_adc_avg()
    
    t = map_value(adc_value, 810, 3200, 0, 100)
    
    if((t >= 0) and (t <= 100)):
        t_str = "T/deg C: " + str("%3.1f" %t)
    else:
        t_str = "T/deg C: ---"
        
    oled.fill(oled.BLACK)
    oled.text(t_str, 6, 4, oled.WHITE)
    oled.text("ADC: " + str("%4u" %adc_value), 6, 16, oled.WHITE)
    oled.blit(background, 0, 30)
    l = int(map_value(t, 0, 100, 0, 100))
    oled.fill_rect(20, 38, l, 4, oled.WHITE)
    oled.show()
    print(t_str)
    sleep_ms(400)
    
